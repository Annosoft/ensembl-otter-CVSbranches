#!/usr/local/bin/perl -Tw

# Author:        jgrg
# Group:         anacode
# Maintainer:    jgrg
# Last modified: $Date: 2010-10-28 13:38:10 $
# Id:            $Id: nph-pfetch,v 1.6.2.1 2010-10-28 13:38:10 mca Exp $
# Source:        $Source: /tmp/ENSCOPY-ENSEMBL-OTTER/scripts/apache/Attic/nph-pfetch,v $

use strict;
use warnings;

use SangerPaths qw{ core };
use SangerWeb;
use IO::Socket;
use CGI;

my $q;

eval {
    $q = CGI->new;

    # XXX: remove this when nph-* are gone; should we be using ServerScriptSupport.pm ?
    my $script = $ENV{SCRIPT_FILENAME} || $0;
    $q->nph(1) if $script =~ m{/nph-};
    
    my $sw = SangerWeb->new({ cgi => $q });
    die "Not authorized\n"
      unless $sw->username;
};

if ($@) {
    print $q->header(
        -status => 403,
        -type   => 'text/plain',
        );
    print $@;
    exit(1);
}

my $socket;

eval {
    # Get request string and de-taint
    my $req = $q->param('request');
    $req =~ s/\s+/ /g;
    $req =~ s/[^\w\-\.\: ]//g;

    die "Empty request\n" unless $req =~ /\S/;

    foreach my $ip_addr (qw{ 172.17.62.2 172.17.62.3 }){
        last if $socket = IO::Socket::INET->new(
            PeerAddr 	=> $ip_addr,
            PeerPort 	=> 22400,
            Proto    	=> 'tcp',
            Type     	=> SOCK_STREAM,
            Timeout  	=> 10,
            );
    }
    die "Connect to pfetch server failed" unless $socket;
    
    print $socket $req, "\n";
};

if ($@) {
    print $q->header(
        -status => 500,
        -type   => 'text/plain',
        );
    print $@;
    exit(1);
} else {
    print $q->header(
        -status => 200,
        -type   => 'text/plain',
        );
    
    while (<$socket>) {
        print;
    }
    close $socket;
    exit(0);
}
